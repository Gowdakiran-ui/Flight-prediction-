import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder
from sklearn.ensemble import RandomForestRegressor
from sklearn.linear_model import LinearRegression
from sklearn.tree import DecisionTreeRegressor
from sklearn.metrics import mean_squared_error
import joblib

# Load Dataset
data = pd.read_csv('/mnt/data/archive (2).csv')

# Encoding Categorical Variables
encoder = LabelEncoder()
categorical_features = ['Airline', 'Source', 'Destination', 'Route', 'Additional_Info']
for feature in categorical_features:
    data[feature] = encoder.fit_transform(data[feature])

# Splitting Dataset
X = data.drop(['Price'], axis=1)
y = data['Price']
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Initialize Models
models = {
    'Random Forest': RandomForestRegressor(random_state=42),
    'Linear Regression': LinearRegression(),
    'Decision Tree': DecisionTreeRegressor(random_state=42)
}

# Train and Evaluate Models
best_model = None
best_rmse = float('inf')

for model_name, model in models.items():
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    rmse = mean_squared_error(y_test, y_pred, squared=False)
    if rmse < best_rmse:
        best_rmse = rmse
        best_model = (model_name, model)

# Save Best Model
joblib.dump(best_model[1], f'{best_model[0].lower().replace(" ", "_")}_model.pkl')
